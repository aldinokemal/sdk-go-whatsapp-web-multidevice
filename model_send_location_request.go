/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 5.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the SendLocationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendLocationRequest{}

// SendLocationRequest struct for SendLocationRequest
type SendLocationRequest struct {
	// Phone number with country code
	Phone *string `json:"phone,omitempty"`
	// Latitude coordinate
	Latitude *string `json:"latitude,omitempty"`
	// Longitude coordinate
	Longitude *string `json:"longitude,omitempty"`
}

// NewSendLocationRequest instantiates a new SendLocationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendLocationRequest() *SendLocationRequest {
	this := SendLocationRequest{}
	return &this
}

// NewSendLocationRequestWithDefaults instantiates a new SendLocationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendLocationRequestWithDefaults() *SendLocationRequest {
	this := SendLocationRequest{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *SendLocationRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendLocationRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *SendLocationRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *SendLocationRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *SendLocationRequest) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendLocationRequest) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *SendLocationRequest) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *SendLocationRequest) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *SendLocationRequest) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendLocationRequest) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *SendLocationRequest) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *SendLocationRequest) SetLongitude(v string) {
	o.Longitude = &v
}

func (o SendLocationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendLocationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return toSerialize, nil
}

type NullableSendLocationRequest struct {
	value *SendLocationRequest
	isSet bool
}

func (v NullableSendLocationRequest) Get() *SendLocationRequest {
	return v.value
}

func (v *NullableSendLocationRequest) Set(val *SendLocationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendLocationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendLocationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendLocationRequest(val *SendLocationRequest) *NullableSendLocationRequest {
	return &NullableSendLocationRequest{value: val, isSet: true}
}

func (v NullableSendLocationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendLocationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


