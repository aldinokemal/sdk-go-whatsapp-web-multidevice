/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 5.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the NewsletterThreadMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewsletterThreadMetadata{}

// NewsletterThreadMetadata struct for NewsletterThreadMetadata
type NewsletterThreadMetadata struct {
	CreationTime *string `json:"creation_time,omitempty"`
	Invite *string `json:"invite,omitempty"`
	Name *NewsletterThreadMetadataName `json:"name,omitempty"`
	Description *NewsletterThreadMetadataDescription `json:"description,omitempty"`
	SubscribersCount *string `json:"subscribers_count,omitempty"`
	Verification *string `json:"verification,omitempty"`
	Picture *NewsletterThreadMetadataPicture `json:"picture,omitempty"`
	Preview *NewsletterThreadMetadataPreview `json:"preview,omitempty"`
	Settings *NewsletterThreadMetadataSettings `json:"settings,omitempty"`
}

// NewNewsletterThreadMetadata instantiates a new NewsletterThreadMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewsletterThreadMetadata() *NewsletterThreadMetadata {
	this := NewsletterThreadMetadata{}
	return &this
}

// NewNewsletterThreadMetadataWithDefaults instantiates a new NewsletterThreadMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewsletterThreadMetadataWithDefaults() *NewsletterThreadMetadata {
	this := NewsletterThreadMetadata{}
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetCreationTime() string {
	if o == nil || IsNil(o.CreationTime) {
		var ret string
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetCreationTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given string and assigns it to the CreationTime field.
func (o *NewsletterThreadMetadata) SetCreationTime(v string) {
	o.CreationTime = &v
}

// GetInvite returns the Invite field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetInvite() string {
	if o == nil || IsNil(o.Invite) {
		var ret string
		return ret
	}
	return *o.Invite
}

// GetInviteOk returns a tuple with the Invite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetInviteOk() (*string, bool) {
	if o == nil || IsNil(o.Invite) {
		return nil, false
	}
	return o.Invite, true
}

// HasInvite returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasInvite() bool {
	if o != nil && !IsNil(o.Invite) {
		return true
	}

	return false
}

// SetInvite gets a reference to the given string and assigns it to the Invite field.
func (o *NewsletterThreadMetadata) SetInvite(v string) {
	o.Invite = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetName() NewsletterThreadMetadataName {
	if o == nil || IsNil(o.Name) {
		var ret NewsletterThreadMetadataName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetNameOk() (*NewsletterThreadMetadataName, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given NewsletterThreadMetadataName and assigns it to the Name field.
func (o *NewsletterThreadMetadata) SetName(v NewsletterThreadMetadataName) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetDescription() NewsletterThreadMetadataDescription {
	if o == nil || IsNil(o.Description) {
		var ret NewsletterThreadMetadataDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetDescriptionOk() (*NewsletterThreadMetadataDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NewsletterThreadMetadataDescription and assigns it to the Description field.
func (o *NewsletterThreadMetadata) SetDescription(v NewsletterThreadMetadataDescription) {
	o.Description = &v
}

// GetSubscribersCount returns the SubscribersCount field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetSubscribersCount() string {
	if o == nil || IsNil(o.SubscribersCount) {
		var ret string
		return ret
	}
	return *o.SubscribersCount
}

// GetSubscribersCountOk returns a tuple with the SubscribersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetSubscribersCountOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersCount) {
		return nil, false
	}
	return o.SubscribersCount, true
}

// HasSubscribersCount returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasSubscribersCount() bool {
	if o != nil && !IsNil(o.SubscribersCount) {
		return true
	}

	return false
}

// SetSubscribersCount gets a reference to the given string and assigns it to the SubscribersCount field.
func (o *NewsletterThreadMetadata) SetSubscribersCount(v string) {
	o.SubscribersCount = &v
}

// GetVerification returns the Verification field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetVerification() string {
	if o == nil || IsNil(o.Verification) {
		var ret string
		return ret
	}
	return *o.Verification
}

// GetVerificationOk returns a tuple with the Verification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetVerificationOk() (*string, bool) {
	if o == nil || IsNil(o.Verification) {
		return nil, false
	}
	return o.Verification, true
}

// HasVerification returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasVerification() bool {
	if o != nil && !IsNil(o.Verification) {
		return true
	}

	return false
}

// SetVerification gets a reference to the given string and assigns it to the Verification field.
func (o *NewsletterThreadMetadata) SetVerification(v string) {
	o.Verification = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetPicture() NewsletterThreadMetadataPicture {
	if o == nil || IsNil(o.Picture) {
		var ret NewsletterThreadMetadataPicture
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetPictureOk() (*NewsletterThreadMetadataPicture, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given NewsletterThreadMetadataPicture and assigns it to the Picture field.
func (o *NewsletterThreadMetadata) SetPicture(v NewsletterThreadMetadataPicture) {
	o.Picture = &v
}

// GetPreview returns the Preview field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetPreview() NewsletterThreadMetadataPreview {
	if o == nil || IsNil(o.Preview) {
		var ret NewsletterThreadMetadataPreview
		return ret
	}
	return *o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetPreviewOk() (*NewsletterThreadMetadataPreview, bool) {
	if o == nil || IsNil(o.Preview) {
		return nil, false
	}
	return o.Preview, true
}

// HasPreview returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasPreview() bool {
	if o != nil && !IsNil(o.Preview) {
		return true
	}

	return false
}

// SetPreview gets a reference to the given NewsletterThreadMetadataPreview and assigns it to the Preview field.
func (o *NewsletterThreadMetadata) SetPreview(v NewsletterThreadMetadataPreview) {
	o.Preview = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *NewsletterThreadMetadata) GetSettings() NewsletterThreadMetadataSettings {
	if o == nil || IsNil(o.Settings) {
		var ret NewsletterThreadMetadataSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsletterThreadMetadata) GetSettingsOk() (*NewsletterThreadMetadataSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *NewsletterThreadMetadata) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given NewsletterThreadMetadataSettings and assigns it to the Settings field.
func (o *NewsletterThreadMetadata) SetSettings(v NewsletterThreadMetadataSettings) {
	o.Settings = &v
}

func (o NewsletterThreadMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewsletterThreadMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	if !IsNil(o.Invite) {
		toSerialize["invite"] = o.Invite
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SubscribersCount) {
		toSerialize["subscribers_count"] = o.SubscribersCount
	}
	if !IsNil(o.Verification) {
		toSerialize["verification"] = o.Verification
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if !IsNil(o.Preview) {
		toSerialize["preview"] = o.Preview
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableNewsletterThreadMetadata struct {
	value *NewsletterThreadMetadata
	isSet bool
}

func (v NullableNewsletterThreadMetadata) Get() *NewsletterThreadMetadata {
	return v.value
}

func (v *NullableNewsletterThreadMetadata) Set(val *NewsletterThreadMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableNewsletterThreadMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableNewsletterThreadMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewsletterThreadMetadata(val *NewsletterThreadMetadata) *NullableNewsletterThreadMetadata {
	return &NullableNewsletterThreadMetadata{value: val, isSet: true}
}

func (v NullableNewsletterThreadMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewsletterThreadMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


