/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 6.9.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the SetGroupPhotoResponseResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetGroupPhotoResponseResults{}

// SetGroupPhotoResponseResults struct for SetGroupPhotoResponseResults
type SetGroupPhotoResponseResults struct {
	// The ID of the uploaded picture, or 'remove' if photo was removed
	PictureId *string `json:"picture_id,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewSetGroupPhotoResponseResults instantiates a new SetGroupPhotoResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetGroupPhotoResponseResults() *SetGroupPhotoResponseResults {
	this := SetGroupPhotoResponseResults{}
	return &this
}

// NewSetGroupPhotoResponseResultsWithDefaults instantiates a new SetGroupPhotoResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetGroupPhotoResponseResultsWithDefaults() *SetGroupPhotoResponseResults {
	this := SetGroupPhotoResponseResults{}
	return &this
}

// GetPictureId returns the PictureId field value if set, zero value otherwise.
func (o *SetGroupPhotoResponseResults) GetPictureId() string {
	if o == nil || IsNil(o.PictureId) {
		var ret string
		return ret
	}
	return *o.PictureId
}

// GetPictureIdOk returns a tuple with the PictureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetGroupPhotoResponseResults) GetPictureIdOk() (*string, bool) {
	if o == nil || IsNil(o.PictureId) {
		return nil, false
	}
	return o.PictureId, true
}

// HasPictureId returns a boolean if a field has been set.
func (o *SetGroupPhotoResponseResults) HasPictureId() bool {
	if o != nil && !IsNil(o.PictureId) {
		return true
	}

	return false
}

// SetPictureId gets a reference to the given string and assigns it to the PictureId field.
func (o *SetGroupPhotoResponseResults) SetPictureId(v string) {
	o.PictureId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SetGroupPhotoResponseResults) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetGroupPhotoResponseResults) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SetGroupPhotoResponseResults) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SetGroupPhotoResponseResults) SetMessage(v string) {
	o.Message = &v
}

func (o SetGroupPhotoResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetGroupPhotoResponseResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PictureId) {
		toSerialize["picture_id"] = o.PictureId
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableSetGroupPhotoResponseResults struct {
	value *SetGroupPhotoResponseResults
	isSet bool
}

func (v NullableSetGroupPhotoResponseResults) Get() *SetGroupPhotoResponseResults {
	return v.value
}

func (v *NullableSetGroupPhotoResponseResults) Set(val *SetGroupPhotoResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableSetGroupPhotoResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableSetGroupPhotoResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetGroupPhotoResponseResults(val *SetGroupPhotoResponseResults) *NullableSetGroupPhotoResponseResults {
	return &NullableSetGroupPhotoResponseResults{value: val, isSet: true}
}

func (v NullableSetGroupPhotoResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetGroupPhotoResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


