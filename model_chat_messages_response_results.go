/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 6.9.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the ChatMessagesResponseResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatMessagesResponseResults{}

// ChatMessagesResponseResults struct for ChatMessagesResponseResults
type ChatMessagesResponseResults struct {
	Data []ChatMessage `json:"data,omitempty"`
	Pagination *ChatMessagesResponseResultsPagination `json:"pagination,omitempty"`
	ChatInfo *Chat `json:"chat_info,omitempty"`
}

// NewChatMessagesResponseResults instantiates a new ChatMessagesResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatMessagesResponseResults() *ChatMessagesResponseResults {
	this := ChatMessagesResponseResults{}
	return &this
}

// NewChatMessagesResponseResultsWithDefaults instantiates a new ChatMessagesResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatMessagesResponseResultsWithDefaults() *ChatMessagesResponseResults {
	this := ChatMessagesResponseResults{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ChatMessagesResponseResults) GetData() []ChatMessage {
	if o == nil || IsNil(o.Data) {
		var ret []ChatMessage
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessagesResponseResults) GetDataOk() ([]ChatMessage, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ChatMessagesResponseResults) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ChatMessage and assigns it to the Data field.
func (o *ChatMessagesResponseResults) SetData(v []ChatMessage) {
	o.Data = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ChatMessagesResponseResults) GetPagination() ChatMessagesResponseResultsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ChatMessagesResponseResultsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessagesResponseResults) GetPaginationOk() (*ChatMessagesResponseResultsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ChatMessagesResponseResults) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ChatMessagesResponseResultsPagination and assigns it to the Pagination field.
func (o *ChatMessagesResponseResults) SetPagination(v ChatMessagesResponseResultsPagination) {
	o.Pagination = &v
}

// GetChatInfo returns the ChatInfo field value if set, zero value otherwise.
func (o *ChatMessagesResponseResults) GetChatInfo() Chat {
	if o == nil || IsNil(o.ChatInfo) {
		var ret Chat
		return ret
	}
	return *o.ChatInfo
}

// GetChatInfoOk returns a tuple with the ChatInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessagesResponseResults) GetChatInfoOk() (*Chat, bool) {
	if o == nil || IsNil(o.ChatInfo) {
		return nil, false
	}
	return o.ChatInfo, true
}

// HasChatInfo returns a boolean if a field has been set.
func (o *ChatMessagesResponseResults) HasChatInfo() bool {
	if o != nil && !IsNil(o.ChatInfo) {
		return true
	}

	return false
}

// SetChatInfo gets a reference to the given Chat and assigns it to the ChatInfo field.
func (o *ChatMessagesResponseResults) SetChatInfo(v Chat) {
	o.ChatInfo = &v
}

func (o ChatMessagesResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatMessagesResponseResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.ChatInfo) {
		toSerialize["chat_info"] = o.ChatInfo
	}
	return toSerialize, nil
}

type NullableChatMessagesResponseResults struct {
	value *ChatMessagesResponseResults
	isSet bool
}

func (v NullableChatMessagesResponseResults) Get() *ChatMessagesResponseResults {
	return v.value
}

func (v *NullableChatMessagesResponseResults) Set(val *ChatMessagesResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableChatMessagesResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableChatMessagesResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatMessagesResponseResults(val *ChatMessagesResponseResults) *NullableChatMessagesResponseResults {
	return &NullableChatMessagesResponseResults{value: val, isSet: true}
}

func (v NullableChatMessagesResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatMessagesResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


