/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 6.9.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the UserCheckResponseResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCheckResponseResults{}

// UserCheckResponseResults struct for UserCheckResponseResults
type UserCheckResponseResults struct {
	IsOnWhatsapp *bool `json:"is_on_whatsapp,omitempty"`
}

// NewUserCheckResponseResults instantiates a new UserCheckResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCheckResponseResults() *UserCheckResponseResults {
	this := UserCheckResponseResults{}
	return &this
}

// NewUserCheckResponseResultsWithDefaults instantiates a new UserCheckResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCheckResponseResultsWithDefaults() *UserCheckResponseResults {
	this := UserCheckResponseResults{}
	return &this
}

// GetIsOnWhatsapp returns the IsOnWhatsapp field value if set, zero value otherwise.
func (o *UserCheckResponseResults) GetIsOnWhatsapp() bool {
	if o == nil || IsNil(o.IsOnWhatsapp) {
		var ret bool
		return ret
	}
	return *o.IsOnWhatsapp
}

// GetIsOnWhatsappOk returns a tuple with the IsOnWhatsapp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCheckResponseResults) GetIsOnWhatsappOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnWhatsapp) {
		return nil, false
	}
	return o.IsOnWhatsapp, true
}

// HasIsOnWhatsapp returns a boolean if a field has been set.
func (o *UserCheckResponseResults) HasIsOnWhatsapp() bool {
	if o != nil && !IsNil(o.IsOnWhatsapp) {
		return true
	}

	return false
}

// SetIsOnWhatsapp gets a reference to the given bool and assigns it to the IsOnWhatsapp field.
func (o *UserCheckResponseResults) SetIsOnWhatsapp(v bool) {
	o.IsOnWhatsapp = &v
}

func (o UserCheckResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCheckResponseResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsOnWhatsapp) {
		toSerialize["is_on_whatsapp"] = o.IsOnWhatsapp
	}
	return toSerialize, nil
}

type NullableUserCheckResponseResults struct {
	value *UserCheckResponseResults
	isSet bool
}

func (v NullableUserCheckResponseResults) Get() *UserCheckResponseResults {
	return v.value
}

func (v *NullableUserCheckResponseResults) Set(val *UserCheckResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCheckResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCheckResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCheckResponseResults(val *UserCheckResponseResults) *NullableUserCheckResponseResults {
	return &NullableUserCheckResponseResults{value: val, isSet: true}
}

func (v NullableUserCheckResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCheckResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


