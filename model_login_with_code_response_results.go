/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 4.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk_go_whatsapp_web_multidevice

import (
	"encoding/json"
)

// checks if the LoginWithCodeResponseResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginWithCodeResponseResults{}

// LoginWithCodeResponseResults struct for LoginWithCodeResponseResults
type LoginWithCodeResponseResults struct {
	PairCode *string `json:"pair_code,omitempty"`
}

// NewLoginWithCodeResponseResults instantiates a new LoginWithCodeResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginWithCodeResponseResults() *LoginWithCodeResponseResults {
	this := LoginWithCodeResponseResults{}
	return &this
}

// NewLoginWithCodeResponseResultsWithDefaults instantiates a new LoginWithCodeResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginWithCodeResponseResultsWithDefaults() *LoginWithCodeResponseResults {
	this := LoginWithCodeResponseResults{}
	return &this
}

// GetPairCode returns the PairCode field value if set, zero value otherwise.
func (o *LoginWithCodeResponseResults) GetPairCode() string {
	if o == nil || IsNil(o.PairCode) {
		var ret string
		return ret
	}
	return *o.PairCode
}

// GetPairCodeOk returns a tuple with the PairCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginWithCodeResponseResults) GetPairCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PairCode) {
		return nil, false
	}
	return o.PairCode, true
}

// HasPairCode returns a boolean if a field has been set.
func (o *LoginWithCodeResponseResults) HasPairCode() bool {
	if o != nil && !IsNil(o.PairCode) {
		return true
	}

	return false
}

// SetPairCode gets a reference to the given string and assigns it to the PairCode field.
func (o *LoginWithCodeResponseResults) SetPairCode(v string) {
	o.PairCode = &v
}

func (o LoginWithCodeResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginWithCodeResponseResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PairCode) {
		toSerialize["pair_code"] = o.PairCode
	}
	return toSerialize, nil
}

type NullableLoginWithCodeResponseResults struct {
	value *LoginWithCodeResponseResults
	isSet bool
}

func (v NullableLoginWithCodeResponseResults) Get() *LoginWithCodeResponseResults {
	return v.value
}

func (v *NullableLoginWithCodeResponseResults) Set(val *LoginWithCodeResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginWithCodeResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginWithCodeResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginWithCodeResponseResults(val *LoginWithCodeResponseResults) *NullableLoginWithCodeResponseResults {
	return &NullableLoginWithCodeResponseResults{value: val, isSet: true}
}

func (v NullableLoginWithCodeResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginWithCodeResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


