/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 4.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk_go_whatsapp_web_multidevice

import (
	"encoding/json"
)

// checks if the JoinGroupWithLinkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JoinGroupWithLinkRequest{}

// JoinGroupWithLinkRequest struct for JoinGroupWithLinkRequest
type JoinGroupWithLinkRequest struct {
	Link *string `json:"link,omitempty"`
}

// NewJoinGroupWithLinkRequest instantiates a new JoinGroupWithLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJoinGroupWithLinkRequest() *JoinGroupWithLinkRequest {
	this := JoinGroupWithLinkRequest{}
	return &this
}

// NewJoinGroupWithLinkRequestWithDefaults instantiates a new JoinGroupWithLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJoinGroupWithLinkRequestWithDefaults() *JoinGroupWithLinkRequest {
	this := JoinGroupWithLinkRequest{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *JoinGroupWithLinkRequest) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JoinGroupWithLinkRequest) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *JoinGroupWithLinkRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *JoinGroupWithLinkRequest) SetLink(v string) {
	o.Link = &v
}

func (o JoinGroupWithLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JoinGroupWithLinkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	return toSerialize, nil
}

type NullableJoinGroupWithLinkRequest struct {
	value *JoinGroupWithLinkRequest
	isSet bool
}

func (v NullableJoinGroupWithLinkRequest) Get() *JoinGroupWithLinkRequest {
	return v.value
}

func (v *NullableJoinGroupWithLinkRequest) Set(val *JoinGroupWithLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJoinGroupWithLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJoinGroupWithLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJoinGroupWithLinkRequest(val *JoinGroupWithLinkRequest) *NullableJoinGroupWithLinkRequest {
	return &NullableJoinGroupWithLinkRequest{value: val, isSet: true}
}

func (v NullableJoinGroupWithLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJoinGroupWithLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


