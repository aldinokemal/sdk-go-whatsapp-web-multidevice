/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 6.9.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
)

// checks if the RevokeMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevokeMessageRequest{}

// RevokeMessageRequest struct for RevokeMessageRequest
type RevokeMessageRequest struct {
	// Phone number with country code
	Phone *string `json:"phone,omitempty"`
}

// NewRevokeMessageRequest instantiates a new RevokeMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevokeMessageRequest() *RevokeMessageRequest {
	this := RevokeMessageRequest{}
	return &this
}

// NewRevokeMessageRequestWithDefaults instantiates a new RevokeMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokeMessageRequestWithDefaults() *RevokeMessageRequest {
	this := RevokeMessageRequest{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *RevokeMessageRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevokeMessageRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *RevokeMessageRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *RevokeMessageRequest) SetPhone(v string) {
	o.Phone = &v
}

func (o RevokeMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevokeMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableRevokeMessageRequest struct {
	value *RevokeMessageRequest
	isSet bool
}

func (v NullableRevokeMessageRequest) Get() *RevokeMessageRequest {
	return v.value
}

func (v *NullableRevokeMessageRequest) Set(val *RevokeMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRevokeMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRevokeMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevokeMessageRequest(val *RevokeMessageRequest) *NullableRevokeMessageRequest {
	return &NullableRevokeMessageRequest{value: val, isSet: true}
}

func (v NullableRevokeMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevokeMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


