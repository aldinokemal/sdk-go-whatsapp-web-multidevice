/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 5.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SendPresenceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendPresenceRequest{}

// SendPresenceRequest struct for SendPresenceRequest
type SendPresenceRequest struct {
	// The presence status to send
	Presence string `json:"presence"`
}

type _SendPresenceRequest SendPresenceRequest

// NewSendPresenceRequest instantiates a new SendPresenceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendPresenceRequest(presence string) *SendPresenceRequest {
	this := SendPresenceRequest{}
	this.Presence = presence
	return &this
}

// NewSendPresenceRequestWithDefaults instantiates a new SendPresenceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendPresenceRequestWithDefaults() *SendPresenceRequest {
	this := SendPresenceRequest{}
	return &this
}

// GetPresence returns the Presence field value
func (o *SendPresenceRequest) GetPresence() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Presence
}

// GetPresenceOk returns a tuple with the Presence field value
// and a boolean to check if the value has been set.
func (o *SendPresenceRequest) GetPresenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Presence, true
}

// SetPresence sets field value
func (o *SendPresenceRequest) SetPresence(v string) {
	o.Presence = v
}

func (o SendPresenceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendPresenceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["presence"] = o.Presence
	return toSerialize, nil
}

func (o *SendPresenceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"presence",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendPresenceRequest := _SendPresenceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSendPresenceRequest)

	if err != nil {
		return err
	}

	*o = SendPresenceRequest(varSendPresenceRequest)

	return err
}

type NullableSendPresenceRequest struct {
	value *SendPresenceRequest
	isSet bool
}

func (v NullableSendPresenceRequest) Get() *SendPresenceRequest {
	return v.value
}

func (v *NullableSendPresenceRequest) Set(val *SendPresenceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendPresenceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendPresenceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendPresenceRequest(val *SendPresenceRequest) *NullableSendPresenceRequest {
	return &NullableSendPresenceRequest{value: val, isSet: true}
}

func (v NullableSendPresenceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendPresenceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


