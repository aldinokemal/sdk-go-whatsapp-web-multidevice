/*
WhatsApp API MultiDevice

This API is used for sending whatsapp via API

API version: 5.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SdkWhatsappWebMultiDevice

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserChangePushNameRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserChangePushNameRequest{}

// UserChangePushNameRequest struct for UserChangePushNameRequest
type UserChangePushNameRequest struct {
	// The new display name to set
	PushName string `json:"push_name"`
}

type _UserChangePushNameRequest UserChangePushNameRequest

// NewUserChangePushNameRequest instantiates a new UserChangePushNameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserChangePushNameRequest(pushName string) *UserChangePushNameRequest {
	this := UserChangePushNameRequest{}
	this.PushName = pushName
	return &this
}

// NewUserChangePushNameRequestWithDefaults instantiates a new UserChangePushNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserChangePushNameRequestWithDefaults() *UserChangePushNameRequest {
	this := UserChangePushNameRequest{}
	return &this
}

// GetPushName returns the PushName field value
func (o *UserChangePushNameRequest) GetPushName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PushName
}

// GetPushNameOk returns a tuple with the PushName field value
// and a boolean to check if the value has been set.
func (o *UserChangePushNameRequest) GetPushNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushName, true
}

// SetPushName sets field value
func (o *UserChangePushNameRequest) SetPushName(v string) {
	o.PushName = v
}

func (o UserChangePushNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserChangePushNameRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["push_name"] = o.PushName
	return toSerialize, nil
}

func (o *UserChangePushNameRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"push_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserChangePushNameRequest := _UserChangePushNameRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserChangePushNameRequest)

	if err != nil {
		return err
	}

	*o = UserChangePushNameRequest(varUserChangePushNameRequest)

	return err
}

type NullableUserChangePushNameRequest struct {
	value *UserChangePushNameRequest
	isSet bool
}

func (v NullableUserChangePushNameRequest) Get() *UserChangePushNameRequest {
	return v.value
}

func (v *NullableUserChangePushNameRequest) Set(val *UserChangePushNameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserChangePushNameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserChangePushNameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserChangePushNameRequest(val *UserChangePushNameRequest) *NullableUserChangePushNameRequest {
	return &NullableUserChangePushNameRequest{value: val, isSet: true}
}

func (v NullableUserChangePushNameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserChangePushNameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


